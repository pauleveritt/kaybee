{"resources": {"articles/index": {"docname": "articles/index", "title": "The Article System", "parent_docnames": ["index"], "rtype": "section", "props": {"references": {"author": ["paul"]}, "published": "2018-01-01T12:00:00"}, "excerpt": "3 flavors for formatted dates, each overridable as a setting, usable\nas a Jinja2 filter"}, "authors/index": {"docname": "authors/index", "title": "Authors", "parent_docnames": ["index"], "rtype": "section", "props": {"published": "2018-01-01T12:23:00"}, "excerpt": "Authors are resources that act as references, just like categories etc.", "toctree": ["authors/paul"]}, "authors/paul": {"docname": "authors/paul", "title": "Paul Everitt", "parent_docnames": ["authors/index", "index"], "rtype": "author", "props": {"published": "2018-01-02T12:01:00", "images": [{"usage": "icon_24", "filename": "paul_headshotx24.jpeg"}, {"usage": "icon_128", "filename": "paul_headshotx128.jpeg"}], "label": "paul"}, "excerpt": "Paul Everitt is a developer advocate at JetBrains.", "section": "authors/index"}, "categories/bulma": {"docname": "categories/bulma", "title": "Bulma", "parent_docnames": ["categories/index", "index"], "rtype": "category", "props": {"published": "2018-01-02T12:01:00", "label": "bulma"}, "excerpt": "Bulma\nis a CSS framework for modern Web UIs. It is lightweight, modular, attractive,\nand uses the CSS Flexbox standard.", "section": "categories/index"}, "categories/index": {"docname": "categories/index", "title": "Categories", "parent_docnames": ["index"], "rtype": "section", "props": {"published": "2018-01-01T12:23:00", "featured_resource": "categories/pydantic"}, "excerpt": "Resources in these docs are organized into categories.", "toctree": ["categories/bulma", "categories/kaybee_bulma", "categories/pydantic"], "get_featured_resource": "categories/pydantic"}, "categories/kaybee_bulma": {"docname": "categories/kaybee_bulma", "title": "kaybee_bulma", "parent_docnames": ["categories/index", "index"], "rtype": "category", "props": {"published": "2018-01-02T12:01:00", "label": "kaybee_bulma"}, "excerpt": "kaybee_bulma\nis a Bulma-based theme for Kaybee\u2019s\narticle system.", "section": "categories/index"}, "categories/pydantic": {"docname": "categories/pydantic", "title": "pydantic", "parent_docnames": ["categories/index", "index"], "rtype": "category", "props": {"published": "2018-01-02T12:01:00", "label": "pydantic"}, "excerpt": "pydantic\nis a Python library for validation.", "section": "categories/index"}, "development/debugging": {"docname": "development/debugging", "title": "Debugging", "parent_docnames": ["development/index", "index"], "rtype": "article", "props": {"references": {"topic": ["debugging"]}, "published": "2018-01-02T12:01:00"}, "excerpt": "Most of your Kaybee development will involve making mistakes.\nWhich means most of your time is spent debugging.", "section": "development/index"}, "development/directives": {"docname": "development/directives", "title": "Directives", "parent_docnames": ["development/index", "index"], "rtype": "article", "props": {"published": "2018-01-02T12:01:00"}, "excerpt": "Here\u2019s how the resources plugin uses directives:", "section": "development/index"}, "development/index": {"docname": "development/index", "title": "Kaybee Development", "parent_docnames": ["index"], "rtype": "section", "props": {"published": "2018-01-01T12:23:00"}, "excerpt": "If you\u2019re a developer of Kaybee, or want to use to source, or want to\nsetup a Kaybee project in a similar way, these docs will get you started.", "toctree": ["development/setup", "development/debugging", "development/testing", "development/settings", "development/resources", "development/lineage", "development/models", "development/directives"]}, "development/lineage": {"docname": "development/lineage", "title": "Lineage", "parent_docnames": ["development/index", "index"], "rtype": "article", "props": {"published": "2018-01-02T12:01:00"}, "excerpt": "Storing parent identifier on each resource", "section": "development/index"}, "development/models": {"docname": "development/models", "title": "Models", "parent_docnames": ["development/index", "index"], "rtype": "article", "props": {"published": "2018-01-02T12:01:00"}, "excerpt": "Resources let authors embed properties onto a resource. The site settings let\nusers configure a docs project.", "section": "development/index"}, "development/resources": {"docname": "development/resources", "title": "Resources", "parent_docnames": ["development/index", "index"], "rtype": "article", "props": {"published": "2018-01-02T12:01:00"}, "excerpt": "How are resources created", "section": "development/index"}, "development/settings": {"docname": "development/settings", "title": "Settings", "parent_docnames": ["development/index", "index"], "rtype": "article", "props": {"published": "2018-01-02T12:01:00"}, "excerpt": "Plugin developers need a way to expose settings", "section": "development/index"}, "development/setup": {"docname": "development/setup", "title": "Development Setup", "parent_docnames": ["development/index", "index"], "rtype": "article", "props": {"published": "2018-01-02T12:01:00"}, "excerpt": "Want to hack on Kaybee? This page gives instructions for getting an\nenvironment setup, as well as making releases.", "section": "development/index"}, "development/testing": {"docname": "development/testing", "title": "Testing", "parent_docnames": ["development/index", "index"], "rtype": "article", "props": {"published": "2018-01-02T12:01:00"}, "excerpt": "Kaybee aims to be developed using TDD. This isn\u2019t always easy with Sphinx. As\nsuch, the test strategies for unit testing and integration testing vary.", "section": "development/index"}, "extending/articles": {"docname": "extending/articles", "title": "Articles", "parent_docnames": ["extending/index", "index"], "rtype": "article", "props": {"published": "2018-01-02T12:01:00"}, "excerpt": "Base article/section/homepage/widget", "section": "extending/index"}, "extending/events": {"docname": "extending/events", "title": "Registering Event Callbacks", "parent_docnames": ["extending/index", "index"], "rtype": "article", "props": {"published": "2018-01-02T12:01:00"}, "excerpt": "Sphinx has a system for registering functions that can be run at different\ntimes during the lifecycle of page building. This event system, though, is a\nbit cryptic to use.", "section": "extending/index"}, "extending/images": {"docname": "extending/images", "title": "Images", "parent_docnames": ["extending/index", "index"], "rtype": "article", "props": {"published": "2018-01-02T12:01:00"}, "excerpt": "New kind of pydantic field type", "section": "extending/index"}, "extending/index": {"docname": "extending/index", "title": "Extending Kaybee", "parent_docnames": ["index"], "rtype": "section", "props": {"published": "2018-01-01T12:23:00"}, "excerpt": "Out-of-the box, Kaybee provides a number of useful features. Also, others can\nprovide a \u201cbox\u201d: plugins which provide you with new kinds of things to\nuse in your documents.", "toctree": ["extending/resources", "extending/articles", "extending/loading_directives", "extending/events", "extending/images", "extending/theming"]}, "extending/loading_directives": {"docname": "extending/loading_directives", "title": "Loading Directives", "parent_docnames": ["extending/index", "index"], "rtype": "article", "props": {"published": "2018-01-02T12:01:00"}, "excerpt": "Kaybee is an extensible system. Your docs project, blog, website, intranet,\netc. can be written in terms of your kinds of things.", "section": "extending/index"}, "extending/resources": {"docname": "extending/resources", "title": "Resources", "parent_docnames": ["extending/index", "index"], "rtype": "article", "props": {"published": "2018-01-02T12:01:00"}, "excerpt": "The resources plugin serves as the foundation of a knowledge base in\nKaybee. Let\u2019s investigate how to extend it.", "section": "extending/index"}, "extending/theming": {"docname": "extending/theming", "title": "Theming", "parent_docnames": ["extending/index", "index"], "rtype": "article", "props": {"published": "2018-01-02T12:01:00"}, "excerpt": "This site uses the kaybee_bulma theme", "section": "extending/index"}, "features": {"docname": "features", "title": "Features", "parent_docnames": ["index"], "rtype": "article", "props": {"published": "2018-01-02T12:01:00"}, "excerpt": "Kaybee is a static site generator for knowledge bases. Like other static\nsite generators, it makes it easy to author content which then\ngenerate HTML files. No database, no application server, easy-peasy."}, "implementation/app": {"docname": "implementation/app", "title": "kb, the Default App", "parent_docnames": ["implementation/index", "index"], "rtype": "article", "props": {"published": "2018-01-02T12:01:00"}, "excerpt": "Kaybee has a registry. The registry lets you add configuration statements\nthat form a plugin system.", "section": "implementation/index"}, "implementation/debugdump": {"docname": "implementation/debugdump", "title": "Debugdump", "parent_docnames": ["implementation/index", "index"], "rtype": "article", "props": {"published": "2018-01-02T12:01:00"}, "excerpt": "TDD with integration tests is a very productive way to add features and fix\nbugs. However, writing assertions against HTML is a chore. Not only is it\nclumsy to grab the node and value, but many times, the thing you\u2019re trying\nto inspect isn\u2019t in the generated page.", "section": "implementation/index"}, "implementation/events": {"docname": "implementation/events", "title": "Events", "parent_docnames": ["implementation/index", "index"], "rtype": "article", "props": {"published": "2018-01-02T12:01:00"}, "excerpt": "Kaybee lets you register event handlers with directives, providing a\n(hopefully) easier way to do work during the processing chain.", "section": "implementation/index"}, "implementation/genericpage": {"docname": "implementation/genericpage", "title": "Generic Page", "parent_docnames": ["implementation/index", "index"], "rtype": "article", "props": {"published": "2018-01-02T12:01:00"}, "excerpt": "By default, all pages that don\u2019t have a resource, get assigned a\n\u201cgenericpage\u201d and stored in sphinx_app.genericpages", "section": "implementation/index"}, "implementation/index": {"docname": "implementation/index", "title": "Implementation", "parent_docnames": ["index"], "rtype": "section", "props": {"published": "2018-01-01T12:23:00"}, "excerpt": "Interested in how Kaybee is built? This section contains documents for\nthe development of major features.", "toctree": ["implementation/setup_function", "implementation/app", "implementation/registry", "implementation/events", "implementation/templates", "implementation/debugdump", "implementation/settings", "implementation/resources", "implementation/genericpage", "implementation/queries", "implementation/widgets", "implementation/references"]}, "implementation/references": {"docname": "implementation/references", "title": "References", "parent_docnames": ["implementation/index", "index"], "rtype": "article", "props": {"published": "2018-01-02T12:01:00"}, "excerpt": "Event handler on startup makes sphinx_app.references = dict()", "section": "implementation/index"}, "implementation/registry": {"docname": "implementation/registry", "title": "Registry", "parent_docnames": ["implementation/index", "index"], "rtype": "article", "props": {"published": "2018-01-02T12:01:00"}, "excerpt": "Kaybee\u2019s plugin system makes it easy to extend in rich and interesting ways.", "section": "implementation/index"}, "implementation/resources": {"docname": "implementation/resources", "title": "Resources", "parent_docnames": ["implementation/index", "index"], "rtype": "article", "props": {"published": "2018-01-02T12:01:00"}, "excerpt": "The kaybee.plugins.resources plugin is the heart of Kaybee. It brings\nprovides base models, a ready-to-go resource, a database on the Sphinx app\nobject, and more.", "section": "implementation/index"}, "implementation/settings": {"docname": "implementation/settings", "title": "Settings", "parent_docnames": ["implementation/index", "index"], "rtype": "article", "props": {"published": "2018-01-02T12:01:00"}, "excerpt": "why can\u2019t we do this extensibly?", "section": "implementation/index"}, "implementation/setup_function": {"docname": "implementation/setup_function", "title": "Setup Function", "parent_docnames": ["implementation/index", "index"], "rtype": "article", "props": {"published": "2018-01-02T12:01:00"}, "excerpt": "Sphinx extensions are registered in a documentation project\u2019s conf.py\nfile. What does this do? It finds a setup function in the package\nadded to the extensions sequence, then runs it, passing in the Sphinx\napp. This is covered in the\nSphinx extension guide.", "section": "implementation/index"}, "implementation/templates": {"docname": "implementation/templates", "title": "Templates", "parent_docnames": ["implementation/index", "index"], "rtype": "article", "props": {"published": "2018-01-02T12:01:00"}, "excerpt": "Event handler SphinxEvent.HPC", "section": "implementation/index"}, "implementation/widgets": {"docname": "implementation/widgets", "title": "Widgets", "parent_docnames": ["implementation/index", "index"], "rtype": "article", "props": {"published": "2018-01-02T12:01:00"}, "excerpt": "Kaybee makes a new kind of directive for each registered (via decorator)\nwidget.", "section": "implementation/index"}, "index": {"docname": "index", "title": "kaybee Static Sites for Knowledge Bases", "parent_docnames": [], "rtype": "homepage", "props": {"references": {"author": ["paul"]}, "published": "2018-01-01T12:23:00", "heading": "Kaybee", "subheading": "Extensible Knowledge Base for Static Sites", "hero_image": "library.jpg"}, "toctree": ["whysphinx", "features", "using/index", "articles/index", "extending/index", "development/index", "implementation/index", "categories/index", "authors/index", "topics/index"]}, "topics/debugging": {"docname": "topics/debugging", "title": "Debugging", "parent_docnames": ["topics/index", "index"], "rtype": "topic", "props": {"published": "2018-01-02T12:01:00", "label": "debugging"}, "excerpt": "Debugging stuff.", "section": "topics/index"}, "topics/index": {"docname": "topics/index", "title": "Topics", "parent_docnames": ["index"], "rtype": "section", "props": {"published": "2018-01-01T12:23:00"}, "excerpt": "Resources in these docs are organized into topics.", "toctree": ["topics/debugging"]}, "using/acquireds": {"docname": "using/acquireds", "title": "Acquireds", "parent_docnames": ["using/index", "index"], "rtype": "article", "props": {"references": {"author": ["paul"]}, "published": "2018-01-02T12:01:00"}, "excerpt": "Imagine a section of a site with some properties that appear over and over.\nPutting them into every document kinda sucks. Wouldn\u2019t it be great to\nstore them on a folder?", "section": "using/index"}, "using/genericpage": {"docname": "using/genericpage", "title": "Generic Page", "parent_docnames": ["using/index", "index"], "rtype": "article", "props": {"references": {"author": ["paul"]}, "published": "2018-01-02T12:01:00"}, "excerpt": "Don\u2019t have to put a \u201cresource\u201d on everything", "section": "using/index"}, "using/index": {"docname": "using/index", "title": "Using Kaybee", "parent_docnames": ["index"], "rtype": "section", "props": {"references": {"author": ["paul"]}, "published": "2018-01-01T12:23:00", "is_series": true}, "excerpt": "The ../features document gave a high-level tour of using and\nextending Kaybee. In this section we go into more depth on writing a\nwebsite using the core features of Kaybee.", "toctree": ["using/installation", "using/settings", "using/resources", "using/templates", "using/widgets", "using/references", "using/genericpage", "using/acquireds"]}, "using/installation": {"docname": "using/installation", "title": "Installation", "parent_docnames": ["using/index", "index"], "rtype": "article", "props": {"references": {"author": ["paul"]}, "published": "2018-01-02T12:01:00"}, "excerpt": "For now, Kaybee expects you to generate a Sphinx project, then edit the\ndoc project and its conf.py file.", "section": "using/index"}, "using/references": {"docname": "using/references", "title": "References", "parent_docnames": ["using/index", "index"], "rtype": "article", "props": {"references": {"author": ["paul"]}, "published": "2018-01-02T12:01:00"}, "section": "using/index"}, "using/resources": {"docname": "using/resources", "title": "Resources", "parent_docnames": ["using/index", "index"], "rtype": "article", "props": {"references": {"category": ["pydantic"], "author": ["paul"]}, "published": "2018-01-02T12:01:00"}, "excerpt": "Resources are the heart of Kaybee. They allow a Sphinx page to become a unit\nof knowledge which can be listed, queried, and referenced. You simply embed\nsome YAML into a document to turn it into a resource. If you provide a bad\nvalue, an associated schema will tell you.", "section": "using/index"}, "using/settings": {"docname": "using/settings", "title": "Settings", "parent_docnames": ["using/index", "index"], "rtype": "article", "props": {"references": {"author": ["paul"]}, "published": "2018-01-02T12:01:00"}, "excerpt": "When your make a docs project, you need a way to supply some settings to\nvarious pieces in Kaybee. Perhaps you want to turn on debugdump (a core\nplugin.) Perhaps you want to supply your GitHub name for a Kaybee theme.", "section": "using/index"}, "using/templates": {"docname": "using/templates", "title": "Templates", "parent_docnames": ["using/index", "index"], "rtype": "article", "props": {"references": {"author": ["paul"]}, "published": "2018-01-02T12:01:00"}, "excerpt": "You can override templates in a docs project. Simply put a _templates\ndirectory next to your conf.py file. Then put your templates in there.\nThis uses the normal Sphinx layered namespace approach to template location,\nbut templates in this directory override any with the same name in other\ndirectories.", "section": "using/index"}, "using/widgets": {"docname": "using/widgets", "title": "Widgets", "parent_docnames": ["using/index", "index"], "rtype": "article", "props": {"references": {"author": ["paul"]}, "published": "2018-01-02T12:01:00"}, "excerpt": "Uses the wtype as the base name (without .html) for the template", "section": "using/index"}, "whysphinx": {"docname": "whysphinx", "title": "Why Sphinx", "parent_docnames": ["index"], "rtype": "article", "props": {"published": "2018-10-01T00:01:00"}, "excerpt": "If you\u2019re not in the world of Python, or if you don\u2019t use the wonderful\nReadTheDocs site, then you might not\nbe familiar with Sphinx. Why is it a good basis for a KB system?"}}, "references": {"author": {"paul": {"count": 11, "docname": "authors/paul"}}, "category": {"bulma": {"count": 0, "docname": "categories/bulma"}, "kaybee_bulma": {"count": 0, "docname": "categories/kaybee_bulma"}, "pydantic": {"count": 1, "docname": "categories/pydantic"}}, "reference": {}, "topic": {"debugging": {"count": 1, "docname": "topics/debugging"}}}}